{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-recipes-app/src/context/Provider.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport Context from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipesProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [recipes, setRecipes] = useState([]);\n  const [usingFilter, setUsingFilter] = useState(false);\n\n  const ingredientFoodFetcher = async input => {\n    const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const nameFoodFetcher = async input => {\n    const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/search.php?s=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const letterFoodFetcher = async input => {\n    if (input.length > 1) {\n      global.alert('Your search must have only 1 (one) character');\n    } else {\n      const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/search.php?f=${input[0]}`;\n      const apiPromise = await fetch(FETCH_URL);\n      const jsonData = await apiPromise.json();\n      setRecipes(jsonData);\n    }\n  };\n\n  const apiFoodFetcher = (endPoint, input) => {\n    switch (endPoint) {\n      default:\n      case 'ingredient':\n        ingredientFoodFetcher(input);\n        break;\n\n      case 'name':\n        nameFoodFetcher(input);\n        break;\n\n      case 'firstLetter':\n        letterFoodFetcher(input);\n        break;\n    }\n  };\n\n  const ingredientDrinkFetcher = async input => {\n    const FETCH_URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const nameDrinkFetcher = async input => {\n    const FETCH_URL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const letterDrinkFetcher = async input => {\n    if (input.length > 1) {\n      global.alert('Your search must have only 1 (one) character');\n    } else {\n      const FETCH_URL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${input[0]}`;\n      const apiPromise = await fetch(FETCH_URL);\n      const jsonData = await apiPromise.json();\n      setRecipes(jsonData);\n    }\n  };\n\n  const apiDrinkFetcher = (endPoint, input) => {\n    switch (endPoint) {\n      default:\n      case 'ingredient':\n        ingredientDrinkFetcher(input);\n        break;\n\n      case 'name':\n        nameDrinkFetcher(input);\n        break;\n\n      case 'firstLetter':\n        letterDrinkFetcher(input);\n        break;\n    }\n  };\n\n  const nationalityFoodFetcher = async input => {\n    const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const foodFilterByCategory = async input => {\n    const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const drinkFilterByCategory = async input => {\n    const FETCH_URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const context = {\n    recipes,\n    setRecipes,\n    apiFoodFetcher,\n    apiDrinkFetcher,\n    nameFoodFetcher,\n    nameDrinkFetcher,\n    nationalityFoodFetcher,\n    foodFilterByCategory,\n    drinkFilterByCategory,\n    usingFilter,\n    setUsingFilter\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this); //   Passando o contexto para englobar os componentes filhos\n};\n\n_s(RecipesProvider, \"9nEPtafPLfpxkUVg0cRblScl+jw=\");\n\n_c = RecipesProvider;\nRecipesProvider.propTypes = {\n  children: PropTypes.any\n}.isRequired;\nexport { Context, RecipesProvider as Provider };\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipesProvider\");","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-recipes-app/src/context/Provider.jsx"],"names":["PropTypes","React","useState","Context","RecipesProvider","children","recipes","setRecipes","usingFilter","setUsingFilter","ingredientFoodFetcher","input","FETCH_URL","apiPromise","fetch","jsonData","json","nameFoodFetcher","letterFoodFetcher","length","global","alert","apiFoodFetcher","endPoint","ingredientDrinkFetcher","nameDrinkFetcher","letterDrinkFetcher","apiDrinkFetcher","nationalityFoodFetcher","foodFilterByCategory","drinkFilterByCategory","context","propTypes","any","isRequired","Provider"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport Context from './Context';\n\nconst RecipesProvider = ({ children }) => {\n  const [recipes, setRecipes] = useState([]);\n  const [usingFilter, setUsingFilter] = useState(false);\n\n  const ingredientFoodFetcher = async (input) => {\n    const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const nameFoodFetcher = async (input) => {\n    const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/search.php?s=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const letterFoodFetcher = async (input) => {\n    if (input.length > 1) {\n      global.alert('Your search must have only 1 (one) character');\n    } else {\n      const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/search.php?f=${input[0]}`;\n      const apiPromise = await fetch(FETCH_URL);\n      const jsonData = await apiPromise.json();\n      setRecipes(jsonData);\n    }\n  };\n\n  const apiFoodFetcher = (endPoint, input) => {\n    switch (endPoint) {\n    default:\n    case 'ingredient':\n      ingredientFoodFetcher(input);\n      break;\n    case 'name':\n      nameFoodFetcher(input);\n      break;\n    case 'firstLetter':\n      letterFoodFetcher(input);\n      break;\n    }\n  };\n\n  const ingredientDrinkFetcher = async (input) => {\n    const FETCH_URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const nameDrinkFetcher = async (input) => {\n    const FETCH_URL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const letterDrinkFetcher = async (input) => {\n    if (input.length > 1) {\n      global.alert('Your search must have only 1 (one) character');\n    } else {\n      const FETCH_URL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${input[0]}`;\n      const apiPromise = await fetch(FETCH_URL);\n      const jsonData = await apiPromise.json();\n      setRecipes(jsonData);\n    }\n  };\n\n  const apiDrinkFetcher = (endPoint, input) => {\n    switch (endPoint) {\n    default:\n    case 'ingredient':\n      ingredientDrinkFetcher(input);\n      break;\n    case 'name':\n      nameDrinkFetcher(input);\n      break;\n    case 'firstLetter':\n      letterDrinkFetcher(input);\n      break;\n    }\n  };\n\n  const nationalityFoodFetcher = async (input) => {\n    const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const foodFilterByCategory = async (input) => {\n    const FETCH_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const drinkFilterByCategory = async (input) => {\n    const FETCH_URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${input}`;\n    const apiPromise = await fetch(FETCH_URL);\n    const jsonData = await apiPromise.json();\n    setRecipes(jsonData);\n  };\n\n  const context = { recipes,\n    setRecipes,\n    apiFoodFetcher,\n    apiDrinkFetcher,\n    nameFoodFetcher,\n    nameDrinkFetcher,\n    nationalityFoodFetcher,\n    foodFilterByCategory,\n    drinkFilterByCategory,\n    usingFilter,\n    setUsingFilter };\n\n  return (\n    <Context.Provider value={ context }>\n      {children}\n    </Context.Provider>\n  );\n\n  //   Passando o contexto para englobar os componentes filhos\n};\n\nRecipesProvider.propTypes = {\n  children: PropTypes.any,\n}.isRequired;\n\nexport { Context, RecipesProvider as Provider };\n"]},"metadata":{},"sourceType":"module"}