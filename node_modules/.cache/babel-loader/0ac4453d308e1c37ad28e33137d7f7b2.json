{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-recipes-app/src/components/Recommended.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { REQ_DRINKS, REQ_FOODS } from '../consts';\nimport './Recommended.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst N_REC = 6;\n\nfunction fetchFoodRecipes(set, URL) {\n  fetch(URL).then(r => r.json()).then(d => {\n    if (d.meals) {\n      set(d.meals.slice(0, N_REC));\n    } else if (d.drinks) {\n      set(d.drinks.slice(0, N_REC));\n    }\n  });\n}\n\nfunction reCard(_ref, index, click) {\n  let {\n    strMealThumb,\n    strMeal,\n    idMeal,\n    strDrinkThumb,\n    strDrink,\n    idDrink,\n    strAlcoholic\n  } = _ref;\n  const url = idMeal ? `/foods/${idMeal}` : `/drinks/${idDrink}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reCard\",\n    \"data-testid\": `${index}-recomendation-card`,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => click(url),\n      type: \"button\",\n      className: \"reCard-btn\",\n      children: [strAlcoholic ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"recipe-category\",\n        children: strAlcoholic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": `${index}-recomendation-title`,\n        children: strMeal || strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"reCard-img\",\n        src: strMealThumb || strDrinkThumb,\n        alt: strMeal || strDrink,\n        \"data-testid\": `${index}-card-img`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function Recommended(_ref2) {\n  _s();\n\n  let {\n    type\n  } = _ref2;\n  const [recipes, setRecipes] = useState([]);\n  const history = useHistory();\n\n  const click = url => history.push(url);\n\n  useEffect(() => {\n    fetchFoodRecipes(setRecipes, type === 'foods' ? REQ_DRINKS : REQ_FOODS);\n  }, [type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"recommended\",\n      children: \"Recommended:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carrousel-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carrousel\",\n        children: recipes.length ? recipes.map((i, k) => reCard(i, k, click)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recommended, \"Nd6QP7zRV4+WDIEYcFnrv9XqnhQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Recommended;\nRecommended.propTypes = {\n  type: PropTypes.string\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommended\");","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-recipes-app/src/components/Recommended.jsx"],"names":["PropTypes","React","useEffect","useState","useHistory","REQ_DRINKS","REQ_FOODS","N_REC","fetchFoodRecipes","set","URL","fetch","then","r","json","d","meals","slice","drinks","reCard","index","click","strMealThumb","strMeal","idMeal","strDrinkThumb","strDrink","idDrink","strAlcoholic","url","Recommended","type","recipes","setRecipes","history","push","length","map","i","k","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { REQ_DRINKS, REQ_FOODS } from '../consts';\nimport './Recommended.css';\n\nconst N_REC = 6;\n\nfunction fetchFoodRecipes(set, URL) {\n  fetch(URL).then((r) => r.json()).then((d) => {\n    if (d.meals) {\n      set(d.meals.slice(0, N_REC));\n    } else if (d.drinks) { set(d.drinks.slice(0, N_REC)); }\n  });\n}\n\nfunction reCard({ strMealThumb, strMeal, idMeal, strDrinkThumb, strDrink,\n  idDrink, strAlcoholic }, index, click) {\n  const url = idMeal ? `/foods/${idMeal}` : `/drinks/${idDrink}`;\n  return (\n    <div className=\"reCard\" data-testid={ `${index}-recomendation-card` } key={ index }>\n      <button onClick={ () => click(url) } type=\"button\" className=\"reCard-btn\">\n        {strAlcoholic ? <h2 data-testid=\"recipe-category\">{strAlcoholic}</h2> : null}\n        <p>{index}</p>\n        <p data-testid={ `${index}-recomendation-title` }>{strMeal || strDrink}</p>\n        <img\n          className=\"reCard-img\"\n          src={ strMealThumb || strDrinkThumb }\n          alt={ strMeal || strDrink }\n          data-testid={ `${index}-card-img` }\n        />\n      </button>\n    </div>\n  );\n}\n\nexport default function Recommended({ type }) {\n  const [recipes, setRecipes] = useState([]);\n  const history = useHistory();\n  const click = (url) => history.push(url);\n  useEffect(() => {\n    fetchFoodRecipes(setRecipes, type === 'foods' ? REQ_DRINKS : REQ_FOODS);\n  }, [type]);\n  return (\n    <div>\n      <h2 className=\"recommended\">Recommended:</h2>\n      <div className=\"carrousel-container\">\n        <div className=\"carrousel\">\n          {recipes.length ? recipes.map((i, k) => reCard(i, k, click)) : null }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRecommended.propTypes = { type: PropTypes.string }.isRequired;\n"]},"metadata":{},"sourceType":"module"}